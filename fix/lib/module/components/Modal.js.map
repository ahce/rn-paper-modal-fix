{"version":3,"sources":["Modal.tsx"],"names":["DEFAULT_DURATION","Modal","opacity","Animated","Value","props","visible","rendered","dismissable","hideModal","BackHandler","removeEventListener","handleBack","addEventListener","state","scale","theme","animation","timing","toValue","duration","easing","Easing","out","cubic","useNativeDriver","start","finished","onDismiss","showModal","setState","prevProps","children","wrapInSafeArea","contentContainerStyle","colors","Wrapper","SafeAreaView","View","StyleSheet","absoluteFill","undefined","styles","backdrop","backgroundColor","wrapper","content","nextProps","prevState","React","Component","create","flex","absoluteFillObject","justifyContent"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  Animated,\r\n  BackHandler,\r\n  Easing,\r\n  StyleProp,\r\n  StyleSheet,\r\n  TouchableWithoutFeedback,\r\n  View,\r\n  ViewStyle,\r\n} from 'react-native';\r\nimport SafeAreaView from 'react-native-safe-area-view';\r\nimport Surface from './Surface';\r\nimport { withTheme } from '../core/theming';\r\nimport { Theme } from '../types';\r\n\r\ntype Props = {\r\n  /**\r\n   * Determines whether clicking outside the modal dismiss it.\r\n   */\r\n  dismissable?: boolean;\r\n  /**\r\n   * Callback that is called when the user dismisses the modal.\r\n   */\r\n  onDismiss?: () => void;\r\n  /**\r\n   * Determines Whether the modal is visible.\r\n   */\r\n  visible: boolean;\r\n  /**\r\n   * Determines Whether the modal is wrapped in a SafeAreaView.\r\n   */\r\n  wrapInSafeArea?: boolean;\r\n  /**\r\n   * Content of the `Modal`.\r\n   */\r\n  children: React.ReactNode;\r\n  /**\r\n   * Style for the content of the modal\r\n   */\r\n  contentContainerStyle?: StyleProp<ViewStyle>;\r\n  /**\r\n   * @optional\r\n   */\r\n  theme: Theme;\r\n};\r\n\r\ntype State = {\r\n  opacity: Animated.Value;\r\n  rendered: boolean;\r\n};\r\n\r\nconst DEFAULT_DURATION = 220;\r\n\r\n/**\r\n * The Modal component is a simple way to present content above an enclosing view.\r\n * To render the `Modal` above other components, you'll need to wrap it with the [`Portal`](portal.html) component.\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { Modal, Portal, Text, Button, Provider } from 'react-native-paper';\r\n *\r\n * export default class MyComponent extends React.Component {\r\n *   state = {\r\n *     visible: false,\r\n *   };\r\n *\r\n *   _showModal = () => this.setState({ visible: true });\r\n *   _hideModal = () => this.setState({ visible: false });\r\n *\r\n *   render() {\r\n *     const { visible } = this.state;\r\n *     return (\r\n *       <Provider>\r\n *          <Portal>\r\n *            <Modal visible={visible} onDismiss={this._hideModal}>\r\n *              <Text>Example Modal</Text>\r\n *            </Modal>\r\n *            <Button\r\n *              style={{ marginTop: 30 }}\r\n *              onPress={this._showModal}\r\n *            >\r\n *              Show\r\n *            </Button>\r\n *          </Portal>\r\n *       </Provider>\r\n *     );\r\n *   }\r\n * }\r\n * ```\r\n */\r\n\r\nclass Modal extends React.Component<Props, State> {\r\n  static defaultProps = {\r\n    dismissable: true,\r\n    visible: false,\r\n  };\r\n\r\n  static getDerivedStateFromProps(nextProps: Props, prevState: State) {\r\n    if (nextProps.visible && !prevState.rendered) {\r\n      return {\r\n        rendered: true,\r\n      };\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  state = {\r\n    opacity: new Animated.Value(this.props.visible ? 1 : 0),\r\n    rendered: this.props.visible,\r\n  };\r\n\r\n  componentDidUpdate(prevProps: Props) {\r\n    if (prevProps.visible !== this.props.visible) {\r\n      if (this.props.visible) {\r\n        this.showModal();\r\n      } else {\r\n        this.hideModal();\r\n      }\r\n    }\r\n  }\r\n\r\n  private handleBack = () => {\r\n    if (this.props.dismissable) {\r\n      this.hideModal();\r\n    }\r\n    return true;\r\n  };\r\n\r\n  private showModal = () => {\r\n    BackHandler.removeEventListener('hardwareBackPress', this.handleBack);\r\n    BackHandler.addEventListener('hardwareBackPress', this.handleBack);\r\n\r\n    const { opacity } = this.state;\r\n    const { scale } = this.props.theme.animation;\r\n\r\n    Animated.timing(opacity, {\r\n      toValue: 1,\r\n      duration: scale * DEFAULT_DURATION,\r\n      easing: Easing.out(Easing.cubic),\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  private hideModal = () => {\r\n    BackHandler.removeEventListener('hardwareBackPress', this.handleBack);\r\n\r\n    const { opacity } = this.state;\r\n    const { scale } = this.props.theme.animation;\r\n\r\n    Animated.timing(opacity, {\r\n      toValue: 0,\r\n      duration: scale * DEFAULT_DURATION,\r\n      easing: Easing.out(Easing.cubic),\r\n      useNativeDriver: true,\r\n    }).start(({ finished }) => {\r\n      if (!finished) {\r\n        return;\r\n      }\r\n\r\n      if (this.props.visible && this.props.onDismiss) {\r\n        this.props.onDismiss();\r\n      }\r\n\r\n      if (this.props.visible) {\r\n        this.showModal();\r\n      } else {\r\n        this.setState({\r\n          rendered: false,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    BackHandler.removeEventListener('hardwareBackPress', this.handleBack);\r\n  }\r\n\r\n  render() {\r\n    const { rendered, opacity } = this.state;\r\n\r\n    if (!rendered) return null;\r\n\r\n    const {\r\n      children,\r\n      dismissable,\r\n      wrapInSafeArea = true,\r\n      theme,\r\n      contentContainerStyle,\r\n    } = this.props;\r\n    const { colors } = theme;\r\n    const Wrapper = wrapInSafeArea ? SafeAreaView : View;\r\n    return (\r\n      <Animated.View\r\n        pointerEvents={this.props.visible ? 'auto' : 'none'}\r\n        accessibilityViewIsModal\r\n        accessibilityLiveRegion=\"polite\"\r\n        style={StyleSheet.absoluteFill}\r\n      >\r\n        <TouchableWithoutFeedback\r\n          disabled={!dismissable}\r\n          onPress={dismissable ? this.hideModal : undefined}\r\n        >\r\n          <Animated.View\r\n            style={[\r\n              styles.backdrop,\r\n              { backgroundColor: colors.backdrop, opacity },\r\n            ]}\r\n          />\r\n        </TouchableWithoutFeedback>\r\n        <Wrapper style={styles.wrapper} pointerEvents=\"box-none\">\r\n          <Surface\r\n            style={\r\n              [{ opacity }, styles.content, contentContainerStyle] as StyleProp<\r\n                ViewStyle\r\n              >\r\n            }\r\n          >\r\n            {children}\r\n          </Surface>\r\n        </Wrapper>\r\n      </Animated.View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTheme(Modal);\r\n\r\nconst styles = StyleSheet.create({\r\n  backdrop: {\r\n    flex: 1,\r\n  },\r\n  wrapper: {\r\n    ...StyleSheet.absoluteFillObject,\r\n    justifyContent: 'center',\r\n  },\r\n  content: {\r\n    backgroundColor: 'transparent',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n"]}